{"name":"OntoUML SDK","tagline":"The ontological modelling framework","body":"### What is OntoUML?\r\n\r\n[OntoUML](http://en.wikipedia.org/wiki/OntoUML) is a UML Profile whose elements represent finer-grained distinctions between different kinds of types and encompasses a set of constraints defining the admissible relations between these elements.\r\n\r\n### What is the OntoUML SDK?\r\n\r\nThe OntoUML SDK is composed of two components:\r\n\r\n* PrimeOntoUML - the (Ecore) reference metamodel for OntoUML.  \r\n  It's a lightweight version of [Roberto Carraretto's version](http://code.google.com/p/rcarraretto/) (which is based on Eclipse's UML metamodel).\r\n* OntoUML Editor - a textual editor for OntoUML.  \r\n  Available as an Eclipse plugin, the editor integrates with several modelling tools from the [Eclipse Modelling project](http://www.eclipse.org/modeling/).\r\n\r\n## Installation\r\n\r\nThe Eclipse plugins can be obtained from the OntoUML SDK update site, available at:\r\n\r\n`http://ontouml.sourceforge.net/eclipse/`\r\n\r\nThe plugins are intended to be used in Eclipse Juno release.\r\n\r\n## The language\r\n\r\n```\r\n\r\nCategory SpatialThing { }\r\nCategory GeographicalSpace { }\r\n\r\n//GeneralizationSet SpatialThing_GeographicalSpace specializes SpatialThing into GeographicalSpace;\r\nGeographicalSpace => SpatialThing;\r\n\r\nCategory MaterialEntity { }\r\n\r\nCategory InanimatedEntity { }\r\nCategory BiologicalEntity { }\r\nGeneralizationSet InanimatedOrBiological specializes MaterialEntity into InanimatedEntity, BiologicalEntity;\r\n\r\nCategory HumanOrgan {}\r\nHumanOrgan => BiologicalEntity;\r\n\r\nCategory Agent { }\r\nMixin ActiveAgent { }\r\nMixin PerformerArtist { }\r\n\r\nKind Person { }\r\nPerson => Agent;\r\n\r\nKind SurgeryRoom { }\r\nKind Gallery { }\r\nKind Museum { }\r\n\r\nSurgeryRoom, Gallery, Museum specialize GeographicalSpace; \r\n\r\n\r\nKind Statue {}\r\nStatue => InanimatedEntity;\r\n\r\nKind HumanHeart {}\r\nHumanHeart => HumanOrgan;\r\n\r\nKind Organization { }\r\nOrganization => Agent;\r\n\r\nKind Track { }\r\nKind Album {}\r\n\r\nextensional CollectiveUniversal Group { }\r\n\r\nQuantity PhysicalObject { }\r\n\r\nSubKind MalePerson { }\r\nSubKind FemalePerson { }\r\ncomplete GeneralizationSet Gender specializes Person into MalePerson, FemalePerson;\r\n\r\nSubKind Band {}\r\nBand => Organization;\r\nBand => PerformerArtist;\r\n\r\nPhase DeceasedPerson { }\r\nPhase LivingPerson { }\r\nLivingPerson => ActiveAgent;\r\n\r\ncomplete GeneralizationSet PersonLifeStatus specializes Person into LivingPerson, DeceasedPerson;\r\n\r\nPhase ExtinctOrganization {}\r\nPhase ActiveOrganization {}\r\nActiveOrganization => ActiveAgent;\r\ncomplete GeneralizationSet OrganizationLifeStatus specializes Organization into ActiveOrganization, ExtinctOrganization;\r\n\r\n//mediation is required\r\n//RoleMixin Parent { }\r\n\r\nRole Parent { }\r\nParent => Person; // Is it needed? Isn't it derived from the completeness of the GeneralizationSet\r\n\r\n// They have no mediation but it is required. Why?\r\nRole Father { }\r\nFather => MalePerson;\r\n\r\n// They have no mediation but it is required. Why?\r\nRole Mother { }\r\nMother => FemalePerson;\r\n\r\ncomplete GeneralizationSet FatherOrMother specializes Parent into Father, Mother;\r\n\r\nRole Offspring { }\r\nOffspring => Person;\r\n\r\n// Big win! Haven't needed to extend the DSL to make this construct\r\nRelatorUniversal Registration {\r\n\tmediates Offspring[1..1];\r\n\tmediates Parent[1..2];\r\n}\r\n```\r\n\r\n### Authors and Contributors\r\n- Jo√£o Paulo A. Almeida - @jpalmeida \r\n- Reinaldo de Souza Junior - @juniorz","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}